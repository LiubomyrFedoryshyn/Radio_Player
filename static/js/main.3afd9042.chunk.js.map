{"version":3,"sources":["components/Player.js","components/SearchPlayer.js","components/Search.js","App.js","serviceWorker.js","index.js"],"names":["Player","_ref","stream","detail","img","addedShow","hidePlayer","react_default","a","createElement","className","onClick","MdClose_default","color","src","alt","name","country","website","bundle_default","autoPlay","controls","SearchPlayer","station","streams","API_KEY","Search","state","stations","showplayer","val","stationHide","_this","setState","getStation","e","preventDefault","props","search","target","elements","value","targetUrl","concat","axios","get","then","res","status","undefined","data","image","url","handleChange","onSubmit","this","onChange","type","placeholder","components_SearchPlayer","Component","App","mode","showPlayer","changeModeDark","changeModeColor","changeModeWhite","handleStream","handleStation","_this2","_this3","stationList","length","map","key","id","IosRefresh_default","fontSize","rotate","components_Player","components_Search","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3afd9042.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactAudioPlayer from 'react-audio-player';\r\nimport MdClose from 'react-ionicons/lib/MdClose'\r\n\r\n\r\nconst Player = ({stream, detail, img, addedShow, hidePlayer}) => {\r\n\r\n    return (\r\n        <div className={addedShow}>\r\n             <div className=\"close\" onClick={()=> {hidePlayer()}}><MdClose color=\"rgb(255, 2, 2)\" /></div>\r\n            <h3>Now Playing</h3>\r\n            {img && <img src={img} alt=\"station\"/>}\r\n            <span className=\"name\">{detail.name}</span>\r\n            <span className=\"country\">{detail.country}</span>\r\n            <span className=\"website\">{detail.website}</span>\r\n            <ReactAudioPlayer\r\n                src={stream}\r\n                autoPlay\r\n                controls\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Player","import React from 'react';\r\nimport ReactAudioPlayer from 'react-audio-player';\r\n\r\nconst SearchPlayer = ({station, streams, img}) => {\r\n    \r\n    return (\r\n        <div className=\"searchPlayer\">\r\n             <img src={img} alt=\"search station\"/>\r\n             <span className=\"name\">{station.name}</span>\r\n             <span className=\"country\">{station.country}</span>\r\n             <span className=\"website\">{station.website}</span>\r\n             <ReactAudioPlayer\r\n                src={streams}\r\n                autoPlay\r\n                controls\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPlayer","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport SearchPlayer from './SearchPlayer'\r\nimport MdClose from 'react-ionicons/lib/MdClose'\r\n\r\n\r\n\r\nconst API_KEY = \"468f09dae204773546576b9cde\";\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        stations : [],\r\n        streams : '',\r\n        img : '',\r\n        showplayer : \"hide\",\r\n        val : '',\r\n    }\r\n\r\n    stationHide = () => {\r\n        this.setState({\r\n            showplayer : \"hide\",\r\n            streams : ''\r\n        })\r\n    }\r\n\r\n  getStation = (e) => {\r\n    e.preventDefault();\r\n    this.props.hidePlayer();\r\n    const search = e.target.elements.search.value;\r\n    var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n    targetUrl = `https://api.dirble.com/v2/search/${search}?token=${API_KEY}`\r\n    axios.get(proxyUrl + targetUrl)\r\n        .then(res => {\r\n        if (res.status === 200 && res.data[0] !== undefined) { \r\n            this.setState({\r\n                stations : res.data[0],\r\n                streams : res.data[0].streams[0].stream,\r\n                img : res.data[0].image.url,\r\n                showplayer : \"show\",\r\n                val : ''\r\n            })\r\n        } else {\r\n           this.setState({\r\n            stations : '',\r\n            streams : '',\r\n            img : '',\r\n            showplayer : \"hide\",\r\n            val : 'there is no such a station'\r\n           })\r\n        }\r\n    })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n      this.setState({\r\n          val : e.target.value\r\n      })\r\n  }\r\n\r\n    render () {\r\n        return (\r\n            <div className='search'>\r\n               <form onSubmit={this.getStation}>\r\n                   <input onChange={this.handleChange} type=\"text\" name=\"search\" placeholder=\"enter a station\" value={this.state.val}/>\r\n               </form>\r\n                <div className={this.state.showplayer}>\r\n                    <div className=\"close\" onClick={this.stationHide}><MdClose color=\"rgb(255, 2, 2)\" /></div>\r\n                     <SearchPlayer img={this.state.img} streams={this.state.streams} station={this.state.stations}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios'\nimport Player from './components/Player'\nimport Search from './components/Search'\nimport IosRefresh from 'react-ionicons/lib/IosRefresh'\n\n\nconst API_KEY = \"468f09dae204773546576b9cde\";\n\nclass App extends Component {\n\nstate = {\n  stations : [],\n  stream : [],\n  detail : [],\n  img : [],\n  mode : 'dark',\n  showplayer : 'hide'\n}\n\nshowPlayer = () => {\n  this.setState({\n    showplayer : 'show'\n  })\n}\n\nhidePlayer = () => {\n  this.setState({\n    showplayer : 'hide',\n    stream : ''\n  })\n\n}\n\nchangeModeDark = () => {\n  this.setState({\n    mode : 'dark'\n  });\n}\n\nchangeModeColor = () => {\n  this.setState({\n    mode : 'color'\n  });\n}\n\nchangeModeWhite = () => {\n  this.setState({\n    mode : 'white'\n  });\n}\n\n  componentDidMount(){\n    var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\n        targetUrl = `https://api.dirble.com/v2/stations/popular?token=${API_KEY}`\n    axios.get(proxyUrl + targetUrl)\n    .then(res => {\n      this.setState({\n          stations : res.data,\n      })\n    })\n  }\n \n  handleStream = (stream) => {   \n    this.setState({\n      stream : stream.stream,\n    })\n  }\n\n  handleStation = (station) => {   \n    this.setState({\n      detail : station,\n      img : station.image.url\n\n    })\n  }\n\n\n    render() {\n\n     \n\n      const {stations} = this.state;\n      const stationList = stations.length ? (stations.map(station => {\n        return (\n          <div key={station.id} onClick={ () => {this.handleStation(station)}}>\n            <div onClick={this.showPlayer}>\n              <div onClick={() => {this.handleStream(station.streams[0])}} >{station.name}</div>\n            </div>\n          </div>\n        )\n      })) : (\n        <div className=\"falseRequest\">\n        <IosRefresh fontSize=\"30px\" color=\"rgb(255, 2, 2)\" rotate={true} /> Loading list ...\n        </div>\n      )\n\n        return (\n          <div className=\"App\">\n            <div  className={this.state.mode}>\n              <div className=\"mode_wrapper\">\n                <div className=\"bg_text\">Radio Player</div>\n                <div className=\"dark_theme\" onClick={this.changeModeDark}>Dark Theme</div>\n                <div className=\"colored_theme\" onClick={this.changeModeColor}>Colored Theme</div>\n                <div className=\"white_theme\" onClick={this.changeModeWhite}>White Theme</div>\n              </div>\n              <div className=\"support\">\n                <span>some stations may be not supported in your country</span>\n              </div>\n              <div className=\"main_content_wrapper\">\n                <div className=\"stationList\">\n                  <h3>Top 20 Popular Stations</h3>\n                  {stationList}\n                </div>\n                <div className=\"mainPlayer\">\n                  <Player hidePlayer={this.hidePlayer} addedShow={this.state.showplayer} img={this.state.img} stream={this.state.stream} detail={this.state.detail}/>\n                </div>\n                <Search hidePlayer={this.hidePlayer}/>\n              </div>\n            </div>\n          </div> \n        );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}